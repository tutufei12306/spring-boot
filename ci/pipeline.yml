resource_types:
- name: artifactory-resource
  type: docker-image
  source:
    repository: springio/artifactory-resource
    tag: 0.0.5
- name: pull-request
  type: docker-image
  source:
    repository: jtarchie/pr
- name: github-status-resource
  type: docker-image
  source:
    repository: dpb587/github-status-resource
    tag: master
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest
resources:
- name: git-repo
  type: git
  icon: github-circle
  source:
    uri: ((github-repo))
    username: ((github-username))
    password: ((github-password))
    branch: ((branch))
- name: ci-images-git-repo
  type: git
  icon: github-circle
  source:
    uri: ((github-repo))
    branch: ((branch))
    paths: ["ci/images/*"]
- name: spring-boot-ci-image
  type: docker-image
  icon: docker
  source:
    repository: ((docker-hub-organization))/spring-boot-ci-image
    username: ((docker-hub-username))
    password: ((docker-hub-password))
    tag: ((branch))
- name: spring-boot-jdk13-ci-image
  type: docker-image
  icon: docker
  source:
    repository: ((docker-hub-organization))/spring-boot-jdk13-ci-image
    username: ((docker-hub-username))
    password: ((docker-hub-password))
    tag: ((branch))
- name: repo-status-jdk13-build
  type: github-status-resource
  icon: eye-check-outline
  source:
    repository: ((github-repo-name))
    access_token: ((github-ci-status-token))
    branch: ((branch))
    context: jdk13-build
- name: slack-alert
  type: slack-notification
  icon: slack
  source:
    url: ((slack-webhook-url))
- name: every-wednesday
  type: time
  icon: clock-outline
  source:
    start: 8:00 PM
    stop: 9:00 PM
    days: [Wednesday]
jobs:
- name: build-spring-boot-ci-images
  plan:
  - get: ci-images-git-repo
    trigger: true
  - put: spring-boot-jdk13-ci-image
    params:
      build: ci-images-git-repo/ci/images
      dockerfile: ci-images-git-repo/ci/images/spring-boot-jdk13-ci-image/Dockerfile
- name: detect-jdk-updates
  plan:
  - get: git-repo
  - get: every-wednesday
    trigger: true
  - get: spring-boot-ci-image
  - in_parallel:
    - task: detect-jdk8-update
      file: git-repo/ci/tasks/detect-jdk-updates.yml
      params:
        GITHUB_REPO: spring-boot
        GITHUB_ORGANIZATION: spring-projects
        GITHUB_PASSWORD: ((github-password))
        GITHUB_USERNAME: ((github-username))
        JDK_VERSION: java8
      image: spring-boot-ci-image
    - task: detect-jdk11-update
      file: git-repo/ci/tasks/detect-jdk-updates.yml
      params:
        GITHUB_REPO: spring-boot
        GITHUB_ORGANIZATION: spring-projects
        GITHUB_PASSWORD: ((github-password))
        GITHUB_USERNAME: ((github-username))
        JDK_VERSION: java11
      image: spring-boot-ci-image
    - task: detect-jdk12-update
      file: git-repo/ci/tasks/detect-jdk-updates.yml
      params:
        GITHUB_REPO: spring-boot
        GITHUB_ORGANIZATION: spring-projects
        GITHUB_PASSWORD: ((github-password))
        GITHUB_USERNAME: ((github-username))
        JDK_VERSION: java12
      image: spring-boot-ci-image
- name: jdk13-build
  serial: true
  public: true
  plan:
    - get: spring-boot-jdk13-ci-image
    - get: git-repo
      trigger: true
    - put: repo-status-jdk13-build
      params: { state: "pending", commit: "git-repo" }
    - do:
        - task: build-project
          privileged: true
          timeout: 1h30m
          image: spring-boot-jdk13-ci-image
          file: git-repo/ci/tasks/build-project.yml
        - in_parallel:
            - task: build-smoke-tests
              timeout: 1h30m
              image: spring-boot-jdk13-ci-image
              file: git-repo/ci/tasks/build-smoke-tests.yml
            - task: build-integration-tests
              timeout: 1h30m
              image: spring-boot-jdk13-ci-image
              file: git-repo/ci/tasks/build-integration-tests.yml
            - task: build-deployment-tests
              timeout: 1h30m
              image: spring-boot-jdk13-ci-image
              file: git-repo/ci/tasks/build-deployment-tests.yml
      on_failure:
        do:
          - put: repo-status-jdk13-build
            params: { state: "failure", commit: "git-repo" }
          - put: slack-alert
            params:
              text: ":concourse-failed: <https://ci.spring.io/teams/${BUILD_TEAM_NAME}/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}|${BUILD_PIPELINE_NAME} ${BUILD_JOB_NAME} failed!>"
              silent: true
              icon_emoji: ":concourse:"
              username: concourse-ci
    - put: repo-status-jdk13-build
      params: { state: "success", commit: "git-repo" }
    - put: slack-alert
      params:
        text: ":concourse-succeeded: <https://ci.spring.io/teams/${BUILD_TEAM_NAME}/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}|${BUILD_PIPELINE_NAME} ${BUILD_JOB_NAME} was successful!>"
        silent: true
        icon_emoji: ":concourse:"
        username: concourse-ci
groups:
- name: "Build"
  jobs: ["jdk13-build"]
- name: "CI Images"
  jobs: ["build-spring-boot-ci-images", "detect-jdk-updates"]
